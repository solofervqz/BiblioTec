/*
 * Empty Stylesheet file.
 */

.top-form{
    -fx-background-color:#fff;
    -fx-border-color:#000;
    -fx-border-width:.4px .4px .2px .4px;
}

.semi-top-form{
    -fx-background-color:#efefef;
    -fx-border-color:#000;
    -fx-border-width:.2px .4px .4px .4px;
}

.close{
    -fx-background-color:transparent;
    -fx-cursor:hand;
}
.close:hover{
    -fx-background-color:#fb3d63;
}

.minimize{
    -fx-background-color:transparent;
    -fx-cursor:hand;
}
.minimize:hover{
    -fx-background-color:#ddd;
}

.nav-form{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);

}

.nav-btn{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);  
    -fx-cursor:hand;
    -fx-text-fill:#fff;
    -fx-font-size:15px;
    -fx-font-family:"Arial";
    -fx-alignment:CENTER-LEFT;
}

.nav-btn:hover{
    -fx-background-color:linear-gradient(to bottom right, #133075, #6e6e96);  
}

.logout{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);  
    -fx-background-radius:10px;
    -fx-cursor:hand;
}
.logout:hover{
    -fx-background-color:linear-gradient(to bottom right, #133075, #6e6e96);  
}

.shadow{
    -fx-effect:dropshadow(three-pass-box, rgba(0,0,0,0.4), 6,0,0,0);
}

.white-bg{
    -fx-background-color:#fff;
    -fx-background-radius:8px;
}

.words{
        -fx-text-fill:white;
}

.card{  
    -fx-background-color:linear-gradient(to right, #2c4277, #a4a4cc);
    -fx-background-radius:4px;
}

.search{
    -fx-background-color:transparent;
    -fx-border-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);
    -fx-border-width:.8px;
    -fx-border-radius:8px;
    -fx-font-family:"Tahoma";
    -fx-font-size:14px;
    -fx-padding:0px 0px 0px 28px;
}

.search:focused{
    -fx-border-width:1.8px;
}

.table-view{
    -fx-background-color:transparent;
    -fx-padding:0px;
    -fx-border-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);
    -fx-border-width:2px;
    -fx-border-radius:8px;
}
.table-view .table-column{
    -fx-alignment: CENTER;
}
.table-view .column-header-background{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);
    -fx-background-radius:8px 8px 0px 0px;
    -fx-background-inset: 0 0 0 0;
}
.table-view .column-header, .filter{
    -fx-background-color:transparent;
    -fx-size:40px;
}
.table-view .column-header .label{
    -fx-text-fill:#fff;
    -fx-font-family:"Arial";
}

.textfield{
    -fx-background-color:transparent;
    -fx-border-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);
    -fx-border-width:.8px;
    -fx-border-radius:8px;
    -fx-font-family:"Tahoma";
    -fx-font-size:14px;
    -fx-padding:0px 0px 0px 28px;
}
.textfield:focused{
    -fx-background-color:#fff;
    -fx-border-width:1.8px;
}

.label-info{
    -fx-background-color:#fff;
    -fx-background-radius:4px;
    -fx-border-color:linear-gradient(to bottom right, #2d658c, #2ca772);
    -fx-border-width:.8px;
    -fx-font-family:"Tahoma";
    -fx-border-radius:4px;
    -fx-padding:0px 0px 0px 5px;
}

/*CÃ³digo nuevo*/
.chartNav-Bar{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);   
}

.chart-Button{
    -fx-background-color:linear-gradient(to bottom right, #2c4277, #a4a4cc);   
    -fx-cursor:hand;

}

.chart-Button:hover{
    -fx-background-color:linear-gradient(to bottom right, #133075, #6e6e96);  
}


















/*  -------- ALUMNOS --------*/
/*        public ObservableList<studentData> addStudentsListData() {

        ObservableList<studentData> listStudents = FXCollections.observableArrayList();

        String sql = "SELECT * FROM historial";

        connect = database.connectDb();

        try {
            studentData studentD;
            prepare = connect.prepareStatement(sql);
            result = prepare.executeQuery();

            while (result.next()) {
                studentD = new studentData(result.getString("noControl"),
                        LocalTime.parse(result.getString("horaEntrada")),
                        result.getDate("fechaEntrada"));
                                                
                listStudents.add(studentD);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return listStudents;
    }
    
    private ObservableList<studentData> addStudentsListD;
    
    public void addStudentsShowListData() {
        addStudentsListD = addStudentsListData();

        addStudents_col_noControl.setCellValueFactory(new PropertyValueFactory<>("noControl"));
        addStudents_col_horaEntrada.setCellValueFactory(new PropertyValueFactory<>("horaEntrada"));
        addStudents_col_fechaEntrada.setCellValueFactory(new PropertyValueFactory<>("fechaEntrada"));

        addStudents_tableView.setItems(addStudentsListD);
    }
*/









